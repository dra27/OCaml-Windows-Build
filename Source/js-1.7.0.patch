diff -Naur js-1.7.0/src/Makefile.ref js-1.7.0/src/Makefile.ref
--- js-1.7.0/src/Makefile.ref	2006-07-26 20:16:47.000000000 +0100
+++ js-1.7.0/src/Makefile.ref	2012-01-15 07:56:53.645645900 +0000
@@ -91,14 +91,14 @@
 endif
 
 # Prevent floating point errors caused by VC++ optimizations
-ifeq ($(OS_ARCH),WINNT)
+ifdef USE_MSVC
 _MSC_VER = $(shell $(CC) 2>&1 | sed -n 's/.*Compiler Version \([0-9]*\)\.\([0-9]*\).*/\1\2/p')
 ifeq (,$(filter-out 1200 1300 1310,$(_MSC_VER)))
 CFLAGS += -Op
 else
 CFLAGS += -fp:precise
 endif
-endif # WINNT
+endif # USE_MSVC
 
 #
 # Ask perl what flags it was built with, so we can build js with similar flags
@@ -279,7 +279,7 @@
 else
 LIBRARY = $(OBJDIR)/libjs.a
 SHARED_LIBRARY = $(OBJDIR)/libjs.$(SO_SUFFIX)
-PROGRAM = $(OBJDIR)/js
+PROGRAM = $(OBJDIR)/js$(HOST_BIN_SUFFIX)
 ifdef JS_PERLCONNECT
 PROG_LIBS += $(PERLLDFLAGS)
 endif
@@ -323,7 +323,7 @@
 	$(CC) -o $@ -c $(CFLAGS) $<
 
 $(OBJDIR)/jskwgen$(HOST_BIN_SUFFIX): $(OBJDIR)/jskwgen.$(OBJ_SUFFIX)
-	$(CC) -o $@ $(CFLAGS) $(LDFLAGS) $^
+	$(CC) -o $@ $(CFLAGS) $(LDFLAGS) $(EXE_LINK_FLAGS) $^
 
 endif
 
@@ -336,7 +336,7 @@
 	link.exe -out:"$@" $(EXE_LINK_FLAGS) $^
 else
 $(PROGRAM): $(PROG_OBJS) $(LIBRARY)
-	$(CC) -o $@ $(CFLAGS) $(PROG_OBJS) $(LIBRARY) $(LDFLAGS) $(OTHER_LIBS) \
+	$(CC) -o $@ $(CFLAGS) $(PROG_OBJS) $(LIBRARY) $(LDFLAGS) $(EXE_LINK_FLAGS) $(OTHER_LIBS) \
 	    $(PROG_LIBS)
 endif
 
diff -Naur js-1.7.0/src/config/WINNT-MinGW-Cygwin-6.0.mk js-1.7.0/src/config/WINNT-MinGW-Cygwin-6.0.mk
--- js-1.7.0/src/config/WINNT-MinGW-Cygwin-6.0.mk	1970-01-01 00:00:00.000000000 +0000
+++ js-1.7.0/src/config/WINNT-MinGW-Cygwin-6.0.mk	2012-01-15 08:01:42.217094700 +0000
@@ -0,0 +1,99 @@
+# -*- Mode: makefile -*-
+#
+# Hacked together by Adam Rogers [adam (at) jargon (dot) ca] from
+# Linux_All.mk and WINNT5.1.mk to enable building using GNU tools
+# under MinGW on a Win32 platform. [September 6 2008]
+# 
+# Further hacked by David Allsopp 13-Aug-2009 for Windows 7 RC Cygwin compilation
+# Revised 15-Jan-2012 for cross-compilation with mingw64 compilers
+#
+
+
+#
+# Config for all versions of Linux
+#
+
+PREFIX = i686-w64-mingw32-
+CC = $(PREFIX)gcc
+CCC = $(PREFIX)g++
+LD = $(PREFIX)g++
+CFLAGS += -Wall -Wno-format
+
+OS_CFLAGS = -D_X86_=1 -DXP_WIN -DXP_WIN32 -DWIN32 -D_WINDOWS -D_WIN32 -DWINVER=0x600 -D_WIN32_WINNT=0x600 -D_MINGW -DEXPORT_JS_API
+
+ifdef BUILD_IDG
+OS_CFLAGS += -DBUILD_IDG
+endif
+
+ifdef BUILD_OPT
+OS_CFLAGS += -s
+endif
+
+SO_SUFFIX=dll
+
+JSDLL_CFLAGS = -DEXPORT_JS_API
+PREBUILT_CPUCFG = 1
+
+LIB_LINK_FLAGS= -Wl,--add-stdcall-alias -L./fdlibm/$(OBJDIR) -lfdm
+EXE_LINK_FLAGS= 
+
+# LIB_LINK_FLAGS=-lkernel32 -luser32 -lgdi32 -lwinspool -lcomdlg32 -ladvapi32 -lshell32 -lole32 -loleaut32 -luuid -lwinmm
+# EXE_LINK_FLAGS=-lkernel32 -luser32 -lgdi32 -lwinspool -lcomdlg32 -ladvapi32 -lshell32 -lole32 -loleaut32 -luuid
+
+DEFFILE=$(OBJDIR)/libjs.def
+STATICLIB=$(OBJDIR)/libjs_implib.a
+XMKSHLIBOPTS += -Wl,--output-def=$(DEFFILE) -Wl,--out-implib=$(STATICLIB)
+
+
+RANLIB = $(PREFIX)ranlib
+MKSHLIB = $(LD) -shared $(XMKSHLIBOPTS)
+
+#.c.o:
+#      $(CC) -c -MD $*.d $(CFLAGS) $<
+
+CPU_ARCH = $(shell uname -m)
+# don't filter in x86-64 architecture
+ifneq (x86_64,$(CPU_ARCH))
+ifeq (86,$(findstring 86,$(CPU_ARCH)))
+CPU_ARCH = x86
+# OS_CFLAGS+= -DX86_WINDOWS
+
+ifeq (gcc, $(CC))
+# if using gcc on x86, check version for opt bug 
+# (http://bugzilla.mozilla.org/show_bug.cgi?id=24892)
+GCC_VERSION := $(shell gcc -v 2>&1 | grep version | awk '{ print $$3 }')
+GCC_LIST:=$(sort 2.91.66 $(GCC_VERSION) )
+
+ifeq (2.91.66, $(firstword $(GCC_LIST)))
+CFLAGS+= -DGCC_OPT_BUG
+endif
+endif
+endif
+endif
+
+GFX_ARCH = win32
+
+OS_LIBS = -lm -lc
+
+ASFLAGS += -x assembler-with-cpp
+
+
+ifeq ($(CPU_ARCH),alpha)
+
+# Ask the C compiler on alpha linux to let us work with denormalized
+# double values, which are required by the ECMA spec.
+
+OS_CFLAGS += -mieee
+endif
+
+ifeq ($(CPU_ARCH),x86_64)
+# Use VA_COPY() standard macro on x86-64
+# FIXME: better use it everywhere
+OS_CFLAGS += -DHAVE_VA_COPY -DVA_COPY=va_copy
+endif
+
+ifeq ($(CPU_ARCH),x86_64)
+# We need PIC code for shared libraries
+# FIXME: better patch rules.mk & fdlibm/Makefile*
+OS_CFLAGS += -DPIC -fPIC
+endif
diff -Naur js-1.7.0/src/config/WINNT-MinGW-Cygwin-6.1.mk js-1.7.0/src/config/WINNT-MinGW-Cygwin-6.1.mk
--- js-1.7.0/src/config/WINNT-MinGW-Cygwin-6.1.mk	1970-01-01 00:00:00.000000000 +0000
+++ js-1.7.0/src/config/WINNT-MinGW-Cygwin-6.1.mk	2012-01-15 07:56:53.595571400 +0000
@@ -0,0 +1,44 @@
+# -*- Mode: makefile -*-
+#
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is Mozilla Communicator client code, released
+# March 31, 1998.
+#
+# The Initial Developer of the Original Code is
+# Netscape Communications Corporation.
+# Portions created by the Initial Developer are Copyright (C) 1998
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either the GNU General Public License Version 2 or later (the "GPL"), or
+# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+#
+# Config stuff for Windows Vista (using MinGW under Cygwin)
+#
+
+include $(DEPTH)/config/WINNT-MinGW-Cygwin-6.0.mk
diff -Naur js-1.7.0/src/config/WINNT-MinGW-MSYS-5.1.mk js-1.7.0/src/config/WINNT-MinGW-MSYS-5.1.mk
--- js-1.7.0/src/config/WINNT-MinGW-MSYS-5.1.mk	1970-01-01 00:00:00.000000000 +0000
+++ js-1.7.0/src/config/WINNT-MinGW-MSYS-5.1.mk	2012-01-15 07:56:53.605586300 +0000
@@ -0,0 +1,95 @@
+# -*- Mode: makefile -*-
+#
+# Hacked together by Adam Rogers [adam (at) jargon (dot) ca] from
+# Linux_All.mk and WINNT5.1.mk to enable building using GNU tools
+# under MinGW on a Win32 platform. [September 6 2008]
+#
+
+
+#
+# Config for all versions of Linux
+#
+
+CC = gcc
+CCC = g++
+LD = g++
+CFLAGS += -Wall -Wno-format
+
+OS_CFLAGS = -D_X86_=1 -DXP_WIN -DXP_WIN32 -DWIN32 -D_WINDOWS -D_WIN32 -DWINVER=0x500 -D_WIN32_WINNT=0x500 -D_MINGW -DEXPORT_JS_API
+
+ifdef BUILD_IDG
+OS_CFLAGS += -DBUILD_IDG
+endif
+
+ifdef BUILD_OPT
+OS_CFLAGS += -s
+endif
+
+SO_SUFFIX=dll
+
+JSDLL_CFLAGS = -DEXPORT_JS_API
+PREBUILT_CPUCFG = 1
+
+LIB_LINK_FLAGS= -Wl,--add-stdcall-alias -L./fdlibm/$(OBJDIR) -lfdm
+EXE_LINK_FLAGS= 
+
+# LIB_LINK_FLAGS=-lkernel32 -luser32 -lgdi32 -lwinspool -lcomdlg32 -ladvapi32 -lshell32 -lole32 -loleaut32 -luuid -lwinmm
+# EXE_LINK_FLAGS=-lkernel32 -luser32 -lgdi32 -lwinspool -lcomdlg32 -ladvapi32 -lshell32 -lole32 -loleaut32 -luuid
+
+DEFFILE=$(OBJDIR)/libjs.def
+STATICLIB=$(OBJDIR)/libjs_implib.a
+XMKSHLIBOPTS += -Wl,--output-def=$(DEFFILE) -Wl,--out-implib=$(STATICLIB)
+
+
+RANLIB = ranlib
+MKSHLIB = $(LD) -shared $(XMKSHLIBOPTS)
+
+#.c.o:
+#      $(CC) -c -MD $*.d $(CFLAGS) $<
+
+CPU_ARCH = $(shell uname -m)
+# don't filter in x86-64 architecture
+ifneq (x86_64,$(CPU_ARCH))
+ifeq (86,$(findstring 86,$(CPU_ARCH)))
+CPU_ARCH = x86
+# OS_CFLAGS+= -DX86_WINDOWS
+
+ifeq (gcc, $(CC))
+# if using gcc on x86, check version for opt bug 
+# (http://bugzilla.mozilla.org/show_bug.cgi?id=24892)
+GCC_VERSION := $(shell gcc -v 2>&1 | grep version | awk '{ print $$3 }')
+GCC_LIST:=$(sort 2.91.66 $(GCC_VERSION) )
+
+ifeq (2.91.66, $(firstword $(GCC_LIST)))
+CFLAGS+= -DGCC_OPT_BUG
+endif
+endif
+endif
+endif
+
+GFX_ARCH = win32
+
+OS_LIBS = -lm -lc
+
+ASFLAGS += -x assembler-with-cpp
+
+
+ifeq ($(CPU_ARCH),alpha)
+
+# Ask the C compiler on alpha linux to let us work with denormalized
+# double values, which are required by the ECMA spec.
+
+OS_CFLAGS += -mieee
+endif
+
+ifeq ($(CPU_ARCH),x86_64)
+# Use VA_COPY() standard macro on x86-64
+# FIXME: better use it everywhere
+OS_CFLAGS += -DHAVE_VA_COPY -DVA_COPY=va_copy
+endif
+
+ifeq ($(CPU_ARCH),x86_64)
+# We need PIC code for shared libraries
+# FIXME: better patch rules.mk & fdlibm/Makefile*
+OS_CFLAGS += -DPIC -fPIC
+endif
diff -Naur js-1.7.0/src/config/WINNT5.1.mk js-1.7.0/src/config/WINNT5.1.mk
--- js-1.7.0/src/config/WINNT5.1.mk	2007-08-11 00:23:38.000000000 +0100
+++ js-1.7.0/src/config/WINNT5.1.mk	2012-01-15 07:56:53.605586300 +0000
@@ -38,80 +38,7 @@
 # ***** END LICENSE BLOCK *****
 
 #
-# Config for Windows NT using MS Visual C++ (version?)
+# Config stuff for Windows NT 5.0
 #
 
-CC = cl
-
-RANLIB = echo
-
-PDBFILE = $(basename $(@F)).pdb
-
-#.c.o:
-#      $(CC) -c -MD $*.d $(CFLAGS) $<
-
-CPU_ARCH = x86 # XXX fixme
-GFX_ARCH = win32
-
-# MSVC compiler options for both debug/optimize
-# -nologo  - suppress copyright message
-# -W3      - Warning level 3
-# -Gm      - enable minimal rebuild
-# -Z7      - put debug info into the executable, not in .pdb file
-# -Zi      - put debug info into .pdb file
-# -YX      - automatic precompiled headers
-# -GX      - enable C++ exception support
-WIN_CFLAGS = -nologo -W3 
-
-# MSVC compiler options for debug builds linked to MSVCRTD.DLL
-# -MDd     - link with MSVCRTD.LIB (Dynamically-linked, multi-threaded, debug C-runtime)
-# -Od      - minimal optimization
-WIN_IDG_CFLAGS = -MDd -Od -Z7 
-
-# MSVC compiler options for debug builds linked to MSVCRT.DLL
-# -MD      - link with MSVCRT.LIB (Dynamically-linked, multi-threaded, debug C-runtime)
-# -Od      - minimal optimization
-WIN_DEBUG_CFLAGS = -MD -Od -Zi -Fd$(OBJDIR)/$(PDBFILE)
-
-# MSVC compiler options for release (optimized) builds
-# -MD      - link with MSVCRT.LIB (Dynamically-linked, multi-threaded, C-runtime)
-# -O2      - Optimize for speed
-# -G5      - Optimize for Pentium
-WIN_OPT_CFLAGS = -MD -O2
-
-ifdef BUILD_OPT
-OPTIMIZER = $(WIN_OPT_CFLAGS)
-else
-ifdef BUILD_IDG
-OPTIMIZER = $(WIN_IDG_CFLAGS)
-else
-OPTIMIZER = $(WIN_DEBUG_CFLAGS)
-endif
-endif
-
-OS_CFLAGS = -D_X86_=1 -DXP_WIN -DXP_WIN32 -DWIN32 -D_WINDOWS -D_WIN32 -DWINVER=0x500 -D_WIN32_WINNT=0x500 $(WIN_CFLAGS)
-JSDLL_CFLAGS = -DEXPORT_JS_API
-OS_LIBS = -lm -lc
-
-PREBUILT_CPUCFG = 1
-USE_MSVC = 1
-
-LIB_LINK_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib\
- advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib oldnames.lib \
- winmm.lib \
- -nologo\
- -subsystem:windows -dll -debug -pdb:$(OBJDIR)/$(PDBFILE)\
- -machine:I386\
- -opt:ref -opt:noicf
-
-EXE_LINK_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib\
- advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib oldnames.lib -nologo\
- -subsystem:console -debug -pdb:$(OBJDIR)/$(PDBFILE)\
- -machine:I386\
- -opt:ref -opt:noicf
-
-# CAFEDIR = t:/cafe
-# JCLASSPATH = $(CAFEDIR)/Java/Lib/classes.zip
-# JAVAC = $(CAFEDIR)/Bin/sj.exe
-# JAVAH = $(CAFEDIR)/Java/Bin/javah.exe
-# JCFLAGS = -I$(CAFEDIR)/Java/Include -I$(CAFEDIR)/Java/Include/win32
+include $(DEPTH)/config/WINNT5.0.mk
diff -Naur js-1.7.0/src/config/WINNT5.2.mk js-1.7.0/src/config/WINNT5.2.mk
--- js-1.7.0/src/config/WINNT5.2.mk	2007-08-11 00:23:38.000000000 +0100
+++ js-1.7.0/src/config/WINNT5.2.mk	2012-01-15 07:56:53.615601200 +0000
@@ -38,80 +38,7 @@
 # ***** END LICENSE BLOCK *****
 
 #
-# Config for Windows NT using MS Visual C++ (version?)
+# Config stuff for Windows NT 5.0
 #
 
-CC = cl
-
-RANLIB = echo
-
-PDBFILE = $(basename $(@F)).pdb
-
-#.c.o:
-#      $(CC) -c -MD $*.d $(CFLAGS) $<
-
-CPU_ARCH = x86 # XXX fixme
-GFX_ARCH = win32
-
-# MSVC compiler options for both debug/optimize
-# -nologo  - suppress copyright message
-# -W3      - Warning level 3
-# -Gm      - enable minimal rebuild
-# -Z7      - put debug info into the executable, not in .pdb file
-# -Zi      - put debug info into .pdb file
-# -YX      - automatic precompiled headers
-# -GX      - enable C++ exception support
-WIN_CFLAGS = -nologo -W3 
-
-# MSVC compiler options for debug builds linked to MSVCRTD.DLL
-# -MDd     - link with MSVCRTD.LIB (Dynamically-linked, multi-threaded, debug C-runtime)
-# -Od      - minimal optimization
-WIN_IDG_CFLAGS = -MDd -Od -Z7 
-
-# MSVC compiler options for debug builds linked to MSVCRT.DLL
-# -MD      - link with MSVCRT.LIB (Dynamically-linked, multi-threaded, debug C-runtime)
-# -Od      - minimal optimization
-WIN_DEBUG_CFLAGS = -MD -Od -Zi -Fd$(OBJDIR)/$(PDBFILE)
-
-# MSVC compiler options for release (optimized) builds
-# -MD      - link with MSVCRT.LIB (Dynamically-linked, multi-threaded, C-runtime)
-# -O2      - Optimize for speed
-# -G5      - Optimize for Pentium
-WIN_OPT_CFLAGS = -MD -O2
-
-ifdef BUILD_OPT
-OPTIMIZER = $(WIN_OPT_CFLAGS)
-else
-ifdef BUILD_IDG
-OPTIMIZER = $(WIN_IDG_CFLAGS)
-else
-OPTIMIZER = $(WIN_DEBUG_CFLAGS)
-endif
-endif
-
-OS_CFLAGS = -D_X86_=1 -DXP_WIN -DXP_WIN32 -DWIN32 -D_WINDOWS -D_WIN32 -DWINVER=0x500 -D_WIN32_WINNT=0x500 $(WIN_CFLAGS)
-JSDLL_CFLAGS = -DEXPORT_JS_API
-OS_LIBS = -lm -lc
-
-PREBUILT_CPUCFG = 1
-USE_MSVC = 1
-
-LIB_LINK_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib\
- advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib oldnames.lib \
- winmm.lib \
- -nologo\
- -subsystem:windows -dll -debug -pdb:$(OBJDIR)/$(PDBFILE)\
- -machine:I386\
- -opt:ref -opt:noicf
-
-EXE_LINK_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib\
- advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib oldnames.lib -nologo\
- -subsystem:console -debug -pdb:$(OBJDIR)/$(PDBFILE)\
- -machine:I386\
- -opt:ref -opt:noicf
-
-# CAFEDIR = t:/cafe
-# JCLASSPATH = $(CAFEDIR)/Java/Lib/classes.zip
-# JAVAC = $(CAFEDIR)/Bin/sj.exe
-# JAVAH = $(CAFEDIR)/Java/Bin/javah.exe
-# JCFLAGS = -I$(CAFEDIR)/Java/Include -I$(CAFEDIR)/Java/Include/win32
+include $(DEPTH)/config/WINNT5.0.mk
diff -Naur js-1.7.0/src/config.mk js-1.7.0/src/config.mk
--- js-1.7.0/src/config.mk	2006-07-27 22:00:57.000000000 +0100
+++ js-1.7.0/src/config.mk	2012-01-15 07:56:53.615601200 +0000
@@ -79,6 +79,8 @@
 endif
 ifeq (CYGWIN_NT,$(findstring CYGWIN_NT,$(OS_ARCH)))
 	OS_RELEASE := $(patsubst CYGWIN_NT-%,%,$(OS_ARCH))
+	OS_RELEASE := $(patsubst %-WOW64,%,$(OS_RELEASE))
+	OS_RELEASE := $(patsubst %-WOW,%,$(OS_RELEASE))
 	OS_ARCH    := WINNT
 endif
 ifeq ($(OS_ARCH), CYGWIN32_NT)
diff -Naur js-1.7.0/src/fdlibm/Makefile.ref js-1.7.0/src/fdlibm/Makefile.ref
--- js-1.7.0/src/fdlibm/Makefile.ref	2003-11-15 00:11:04.000000000 +0000
+++ js-1.7.0/src/fdlibm/Makefile.ref	2012-01-15 07:56:53.615601200 +0000
@@ -91,7 +91,7 @@
 #
 # Default IEEE libm
 #
-CFLAGS          += -DXP_UNIX $(OPTIMIZER) $(OS_CFLAGS) $(DEFINES) $(INCLUDES) \
+CFLAGS          += $(OPTIMIZER) $(OS_CFLAGS) $(DEFINES) $(INCLUDES) \
 		  -DJSFILE $(XCFLAGS) -D_IEEE_LIBM
 
 # Need for jstypes.h and friends
diff -Naur js-1.7.0/src/jsconfig.mk js-1.7.0/src/jsconfig.mk
--- js-1.7.0/src/jsconfig.mk	2003-11-15 00:10:56.000000000 +0000
+++ js-1.7.0/src/jsconfig.mk	2012-01-15 07:56:53.635631000 +0000
@@ -111,7 +111,7 @@
 ifdef JS_LIVECONNECT
   SHIP_LIBS   += libjsj.$(SO_SUFFIX) libjsj.a
 endif
-ifeq ($(OS_ARCH), WINNT)
+ifdef USE_MSVC
   SHIP_LIBS    = js32.dll js32.lib
   ifdef JS_LIVECONNECT
     SHIP_LIBS += jsj.dll jsj.lib
diff -Naur js-1.7.0/src/rules.mk js-1.7.0/src/rules.mk
--- js-1.7.0/src/rules.mk	2006-07-07 03:12:02.000000000 +0100
+++ js-1.7.0/src/rules.mk	2012-01-15 07:56:53.665675700 +0000
@@ -115,7 +115,7 @@
 	$(RANLIB) $@
 
 $(SHARED_LIBRARY): $(LIB_OBJS)
-	$(MKSHLIB) -o $@ $(LIB_OBJS) $(LDFLAGS) $(OTHER_LIBS)
+	$(MKSHLIB) -o $@ $(LIB_OBJS) $(LDFLAGS) $(LIB_LINK_FLAGS) $(OTHER_LIBS)
 endif
 endif
 
